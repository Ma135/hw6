Rcpp::cppFunction('
RObject nextperm(IntegerVector x) {
IntegerVector out = Rcpp::clone(x);
if (!std::next_permutation(out.begin(), out.end())) return R_NilValue;
return out;
}')

x <- 1:3
repeat { print(x); x <- nextperm(x); if (is.null(x)) break }



# include <Rcpp .h>
// [[ Rcpp :: plugins (" cpp11 ")]]
double sum ( const Rcpp :: NumericVector & v) {
double res = 0.0;
for ( auto elem : v)
res += elem ;
return res;
}
// [[ Rcpp :: export ]]
double vector_test ( Rcpp :: NumericVector x) {
return sum(x);
}

//comparison
x <- sample (1:5 , replace =TRUE , 100000)
microbenchmark ( rle (x), rle2 (x), rle3 (x))
